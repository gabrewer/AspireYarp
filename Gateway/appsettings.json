{
  "Logging": {
    "LogLevel": {
      "Default": "Debug",
      "Microsoft.AspNetCore": "Warning"
    }
  },
  "AllowedHosts": "*",
  "ReverseProxy": {
    "Routes": {
      "weather": {
        "ClusterId": "weather",
        "Match": {
          "Path": "/weatherforecast/{**catch-all}"
        }
      },
      "weather_https": {
        "ClusterId": "weather_https",
        "Match": {
          "Path": "/weatherforecast_https/{**catch-all}"
        },
        "Transforms": [
          {
            "PathSet": "/weatherforecast"
          }
        ]
      },
      "weather_https_unsafe": {
        "ClusterId": "weather_https_unsafe",
        "Match": {
          "Path": "/weatherforecast_https_unsafe/{**catch-all}"
        },
        "Transforms": [
          {
            "PathSet": "/weatherforecast"
          }
        ]
      }
    },
    "Clusters": {
      // works locally, 403 on azure
      "weather": {
        "Destinations": {
          "weather": {
            "Address": "http://apiservice",
            "Health": "http://apiservice/readiness"
          }
        }
      },
      // fails locally with RemoteCertificateNameMismatch
      "weather_https": {
        "Destinations": {
          "weather_https": {
            "Address": "https://apiservice",
            "Health": "https://apiservice/readiness"
          }
        }
      },
      // works locally, fails remotley with 502 error, Connection reset by peer
      "weather_https_unsafe": {
        "Destinations": {
          "weather_https_unsafe": {
            "Address": "https://apiservice",
            "Health": "https://apiservice/readiness"
          }
        },
        "HttpClient": {
          "DangerousAcceptAnyServerCertificate": true
        }
      }
    }
  }
}
